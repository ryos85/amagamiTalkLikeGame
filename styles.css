/* ==================================================================
   styles.css
   ================================================================== */

:root{
  /* 色と寸法 */
  --bg:#0f1115;
  --panel:#171a21;
  --panel2:#1d212a;
  --text:#e8eef8;
  --muted:#a7b0c2;
  --accent:#7aa2ff;
  --good:#6ee7b7;
  --bad:#f87171;

  /* 画像（縦横比 442:786 ≒ 0.562）をさらに小さく */
  --portrait-w: 260px;
  --portrait-h: 464px; /* 260 / 0.56 ≒ 464 */

  /* 左カラムの 3x3 ボタンの1段あたりの高さ（“縦は低め”のキモ） */
  --left-btn-h: 52px;

  /* ヘッダ/フッタ高さ（レイアウト計算用） */
  --topbar-h: 56px;
  --footer-h: 28px;

  --bubble-enter-ms: 160ms;
  --bubble-ease: cubic-bezier(.2,.85,.35,1);
}

*{ box-sizing:border-box; }
html,body{ height:100%; }
body{
  margin:0;
  color:var(--text);
  background:linear-gradient(180deg,#0e1016 0%,#0b0d12 100%);
  overflow:hidden; /* ← ページ自体はスクロールしない */
  font-family:system-ui,-apple-system,"Segoe UI",Meiryo,"Hiragino Kaku Gothic ProN","Noto Sans JP",sans-serif;
}

/* ヘッダ/フッタ */
.topbar{
  display:flex; align-items:center; justify-content:space-between;
  height:var(--topbar-h); padding:6px 12px;
  background:var(--panel); border-bottom:1px solid #222835;
}
.brand{font-weight:700; letter-spacing:.5px}
.status{display:flex; gap:14px; align-items:center}
.meter { display:flex; flex-direction:column; gap:6px; }
.meter label{font-size:12px; color:var(--muted)}
.meter .bar{width:180px; height:8px; background:#202633; border-radius:999px; overflow:hidden; margin:4px 0}
#affectionBar{height:100%; width:0%; background:linear-gradient(90deg,#5ad1ff,#7aa2ff); transition:width .2s}
.tier{color:var(--muted)}
.badge{padding:2px 8px; border-radius:999px; font-weight:700;}
/* Tension badge colors */
.badge-high  { background:#ff4fa3; color:#fff; }   /* Hi: 強めのピンク */
.badge-mid   { background:#f7c948; color:#222; }   /* Mid: 黄色       */
.badge-low   { background:#0288d1; color:#fff; }   /* Low: 濃い水色   */


.foot{
  display:flex; align-items:center; justify-content:center;
  height:var(--footer-h); padding:0 12px; color:var(--muted);
}

/* 2カラム: 左(画像+3x3), 右(ログ) — 1画面に収める */
.layout{
  display:grid;
  grid-template-columns:max-content 1fr;
  gap:14px;
  padding:12px;
  height:calc(100vh - var(--topbar-h) - var(--footer-h));
  min-height:0;
}

/* 左カラム */
.portrait{
  background:var(--panel); border:1px solid #222835; border-radius:14px;
  padding:10px; display:flex; flex-direction:column; align-items:center; gap:8px;
  height:100%; /* ← 右と同じく縦いっぱいを割り当てる */
  min-height:0;
}
.portrait-frame{
  /* 画像は「最大でも固定サイズ」、残りが足りなければ縮む */
  width:var(--portrait-w);
  height:var(--portrait-h);
  max-height:calc(100% - (var(--left-btn-h) * 3 + 12px) - 8px - 2px - 20px);
  /*          ↑ボタン3段の高さ  ↑行間  ↑画像とボタンの間隔  ↑枠線  ↑上下padding  */
  display:flex; align-items:center; justify-content:center; position:relative;
  border-radius:10px; overflow:hidden;
}
.portrait img{
  width:100%; height:100%;
  object-fit: contain;   /* ← cover から contain に */
  background:#0003;      /* 余白が出るときの台色（お好みで） */
  border-radius:10px; box-shadow:0 12px 40px rgba(0,0,0,.35);
}
.size-badge{
  position:absolute; top:6px; left:6px; padding:2px 8px; font-size:12px; line-height:1.6;
  color:#e8eef8; background:rgba(0,0,0,.55); border:1px solid #333a; border-radius:999px; pointer-events:none;
}

/* 3x3 ボタン（確実に grid にするため !important を付与） */
.portrait .left-buttons{
  width:var(--portrait-w);
  display:grid !important;
  grid-template-columns:repeat(3, minmax(0,1fr)) !important;
  grid-auto-rows:var(--left-btn-h);
  gap:6px;
}
.portrait .left-buttons button{
  padding:6px; border-radius:10px; border:1px solid #23293a;
  background:var(--panel2); color:var(--text); cursor:pointer; font-weight:700;
  display:flex; align-items:center; justify-content:center; flex-direction:column;
  transition:transform .06s ease, box-shadow .06s ease, background .2s;
}
.portrait .left-buttons button:hover{ transform:translateY(-1px); box-shadow:0 8px 20px rgba(0,0,0,.25) }
.portrait .left-buttons .emoji{ font-size:18px; line-height:1 }
.portrait .left-buttons .label{ font-size:11px; opacity:.95 }

/* 右カラム（会話ログを縦いっぱい、内部スクロール） */
.ui{ display:flex; flex-direction:column; height:100%; min-height:0; }
.dialog{
  background:var(--panel); border:1px solid #222835; border-radius:14px;
  padding:10px; display:flex; flex-direction:column; gap:8px;
  flex:1 1 auto; min-height:0;
}
.log{
  flex:1 1 auto; min-height:0; overflow:auto;
  padding:8px; background:#0f141c; border-radius:8px; border:1px solid #202636;
}

/* 選択肢 */
.choices{ display:grid; grid-template-columns:repeat(2,1fr); gap:8px }
.choices button{
  padding:10px; border-radius:10px; border:1px solid #233650;
  background:#192538; color:#e8eef8; cursor:pointer; font-weight:700;
  transition:transform .06s ease, box-shadow .06s ease, background .2s;
}
.choices button:hover{ transform:translateY(-1px); box-shadow:0 8px 20px rgba(0,0,0,.25) }

/* 吹き出し */
.bubble{
  padding:8px 10px; margin:8px 0; border-radius:10px;
  width:max-content; max-width:100%;
  /* ふわっと */
  opacity: 1; /* ← thinkingと分けるため初期値は1にしておく */
}
.bubble:not(.thinking){
  opacity: 0;
  transform: translateY(6px) scale(.98);
  animation: bubbleIn var(--bubble-enter-ms) var(--bubble-ease) forwards;
  will-change: transform, opacity;
  box-shadow: 0 6px 18px rgba(0,0,0,.22);
}
.user{ background:#192538; border:1px solid #233650 }
.npc{ background:#1a2a1f; border:1px solid #25422e }
.system{ background:#2a2333; border:1px solid #3b2f4b }
.meta{
  color:var(--muted);
  font-size:12px;
  margin-top:-6px;
  opacity:.85;
  animation: metaIn 180ms var(--bubble-ease) both;
}
.bubble.thinking{
  opacity:.85;
  font-style:italic;
  animation: none;
}

/* 汎用ボタン */
button{ font:inherit }
button.secondary{ background:#11161f; border:1px solid #2a3448; color:#cfd7e7; padding:8px 10px; border-radius:10px; cursor:pointer }
button.danger{ background:#2a1616; border:1px solid #4c2626; color:#ffb4b4; padding:8px 10px; border-radius:10px; cursor:pointer }
button.secondary:hover, button.danger:hover{ filter:brightness(1.08) }

/* バブルアニメーション */
@keyframes bubbleIn {
  from { opacity: 0; transform: translateY(6px) scale(.98); }
  to   { opacity: 1; transform: translateY(0)   scale(1);   }
}
@keyframes metaIn {
  from { opacity: 0; transform: translateY(2px); }
  to   { opacity: .85; transform: none; }
}

/* 会話中（busy）のカテゴリボタン見た目 */
.left-buttons button:disabled{
  opacity: .45;
  filter: grayscale(25%);
  cursor: not-allowed;
  transform: none !important;
  box-shadow: none !important;
}
.left-buttons button:disabled .emoji,
.left-buttons button:disabled .label{
  opacity: .85;
}

/* === 終了オーバーレイ === */
.overlay{ position:fixed; inset:0; display:flex; align-items:center; justify-content:center;
  background:rgba(0,0,0,.55); z-index:9999; }
.overlay[hidden]{ display:none; }
.overlay-panel{
  width:min(420px, 90vw); background:var(--panel); border:1px solid #2a3448;
  border-radius:16px; padding:20px; text-align:center; box-shadow:0 20px 60px rgba(0,0,0,.5);
}
.overlay-panel h2{ margin:0 0 8px; }
.overlay-panel p{ margin:0; opacity:.95; }
.overlay-actions{ margin-top:14px; display:flex; gap:10px; justify-content:center; }

/* ドキドキ度バーの微ゆらぎ */
@keyframes gentle-wobble {
  from { transform: translateX(-10px); }
  to   { transform: translateX( 10px); }
}
#affectionBar {
  transform-origin: left center;
  animation: gentle-wobble 0.9s ease-in-out infinite alternate;
}
@media (prefers-reduced-motion: reduce) {
  #affectionBar { animation: none; }
}


/* ドキドキ度の値で色を切替（JSが aff-bar-* を付与） */
#affectionBar { background:#f7c948; } /* デフォ：黄色 */
.aff-bar-red    { background:#ff1744 !important; } /* 255 */
.aff-bar-pink   { background:#ff4fa3 !important; } /* 180–254 */
.aff-bar-yellow { background:#f7c948 !important; } /* 51–179 */
.aff-bar-cyan   { background:#0288d1 !important; } /* 0–50 */

/* ドキドキ度行を横並びにして、ハートをバーの左に固定 */
.affectionRow { display:flex; align-items:center; gap:8px; }
.affectionRow .heart { display:inline-block; line-height:1; transform: translateY(1px); }
.affectionRow .bar { flex: 1 1 auto; } /* ゲージを横に伸ばす */
.affectionLabel { white-space:nowrap; }

